"use strict";(self.webpackChunkclient_sim=self.webpackChunkclient_sim||[]).push([[8778],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(h,s(s({ref:t},c),{},{components:r})):n.createElement(h,s({ref:t},c))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7238:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={id:"class-exposure-tree",title:"Class Exposure Tree",hide_title:!0},s="Class Exposure Tree",i={unversionedId:"class-exposure-tree",id:"class-exposure-tree",title:"Class Exposure Tree",description:"The Class Exposure Tree will tell you what classes and methods that are available in Udon.",source:"@site/docs/Class-Exposure-Tree.md",sourceDirName:".",slug:"/class-exposure-tree",permalink:"/class-exposure-tree",draft:!1,editUrl:"https://github.com/vrchat-community/UdonSharp/edit/master/Docs/Source/Class-Exposure-Tree.md",tags:[],version:"current",frontMatter:{id:"class-exposure-tree",title:"Class Exposure Tree",hide_title:!0},sidebar:"mainSidebar",previous:{title:"Runtime Exception Debugging",permalink:"/runtime-exception-debugging"},next:{title:"Networking Tips & Tricks",permalink:"/networking-tips-&-tricks"}},l={},p=[],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"class-exposure-tree"},"Class Exposure Tree"),(0,o.kt)("p",null,"The Class Exposure Tree will tell you what classes and methods that are available in Udon."),(0,o.kt)("p",null,"You can open the window by going to ",(0,o.kt)("inlineCode",{parentName:"p"},"VRChat SDK > Udon Sharp > Class Exposure Tree")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Red = Not exposed to Udon"),(0,o.kt)("li",{parentName:"ul"},"Green = Exposed to Udon")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Udon Type Exposure Tree",src:r(2702).Z,width:"875",height:"468"})),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Show base members")," toggle will show methods inherited from base classes that are exposed, for instance on things inheriting from ",(0,o.kt)("inlineCode",{parentName:"p"},"UnityEngine.Component"),", this will show the ",(0,o.kt)("inlineCode",{parentName:"p"},"GetComponent<T>()")," functions since they're defined on the base class."),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Hide whitelisted accessors")," option is mostly there for VRChat if they decide to move away from using the secure heap. This will only show any functions that may return any type of ",(0,o.kt)("inlineCode",{parentName:"p"},"UnityEngine.Object")," through a method return, method parameter, property, or field. This operates recursively so it will catch things that return structs that may contain a ",(0,o.kt)("inlineCode",{parentName:"p"},"UnityEngine.Object")," as well."))}d.isMDXComponent=!0},2702:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/type-exposure-tree-c4007a984b7e4ff85294536709d690b1.png"}}]);