"use strict";(self.webpackChunkclient_sim=self.webpackChunkclient_sim||[]).push([[5443],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6956:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const i={slug:"release-1.0.0b5",title:"Release 1.0.0b5",date:new Date("2021-09-22T00:00:00.000Z"),authors:["merlin"],tags:["release beta"]},l=void 0,o={permalink:"/news/release-1.0.0b5",source:"@site/news/releases/release-1.0.0b5.md",title:"Release 1.0.0b5",description:"Changelog",date:"2021-09-22T00:00:00.000Z",formattedDate:"September 22, 2021",tags:[{label:"release beta",permalink:"/news/tags/release-beta"}],hasTruncateMarker:!1,authors:[{name:"Merlin",title:"VRChat Developer",url:"https://github.com/merlinvr",imageURL:"https://github.com/merlinvr.png",key:"merlin"}],frontMatter:{slug:"release-1.0.0b5",title:"Release 1.0.0b5",date:"2021-09-22T00:00:00.000Z",authors:["merlin"],tags:["release beta"]},prevItem:{title:"Release 1.0.0b7",permalink:"/news/release-1.0.0b7"},nextItem:{title:"Release 1.0.0b6",permalink:"/news/release-1.0.0b6"}},s={authorsImageUrls:[void 0]},c=[{value:"Changelog",id:"changelog",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"changelog"},"Changelog"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fix string compound addition with const character values, reported by @Pema99"),(0,a.kt)("li",{parentName:"ul"},"Fix covariant conversion of params arrays on reference type values, reported by @Ha\xef~"),(0,a.kt)("li",{parentName:"ul"},"Fix issues with virtual method linkage allocations, reported by @Ha\xef~"),(0,a.kt)("li",{parentName:"ul"},"Add checking for cases where base methods are shadowed by inherited methods, reported by @GlitchyDev"),(0,a.kt)("li",{parentName:"ul"},"Add checking for cases where base fields are shadowed by fields in inherited classes"),(0,a.kt)("li",{parentName:"ul"},"Add checking for abstract U# classes having a U# program asset associated with them, reported by @GlitchyDev"),(0,a.kt)("li",{parentName:"ul"},"Add fix for abstract methods causing the compiler to fail"),(0,a.kt)("li",{parentName:"ul"},"Add validation to make sure people aren't inheriting from interfaces since they will have support added in the coming weeks"),(0,a.kt)("li",{parentName:"ul"},"Add handling for using switch on object condition values, reported by @Pema99"),(0,a.kt)("li",{parentName:"ul"},"Add handling for empty statements, reported by @Pema99"),(0,a.kt)("li",{parentName:"ul"},"Add validation for the class name of U# behaviours mismatching their containing .cs file name since Unity breaks in dumb ways when it's not the same")))}u.isMDXComponent=!0}}]);